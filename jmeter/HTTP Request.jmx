<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">192.168.1.110</stringProp>
        <stringProp name="HTTPSampler.port">8080</stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
        <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/</stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group (templates)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/xml</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Prefer</stringProp>
              <stringProp name="Header.value">return=representation</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /definition/template/adl1.4 (minimal_evaluation)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;!--Operational template XML automatically generated by Ocean Template Designer Version 2.8.94Beta--&gt;&#xd;
&lt;template xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.openehr.org/v1&quot;&gt;&#xd;
  &lt;language&gt;&#xd;
    &lt;terminology_id&gt;&#xd;
      &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
    &lt;/terminology_id&gt;&#xd;
    &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
  &lt;/language&gt;&#xd;
  &lt;description&gt;&#xd;
    &lt;original_author id=&quot;Original Author&quot;&gt;Not Specified&lt;/original_author&gt;&#xd;
    &lt;lifecycle_state&gt;Initial&lt;/lifecycle_state&gt;&#xd;
    &lt;other_details id=&quot;MetaDataSet:Sample Set &quot;&gt;Template metadata sample set &lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Acknowledgements&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Business Process Level&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Care setting&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Client group&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Clinical Record Element&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Copyright&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Issues&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Owner&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Sign off&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Speciality&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;User roles&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;details&gt;&#xd;
      &lt;language&gt;&#xd;
        &lt;terminology_id&gt;&#xd;
          &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
        &lt;/terminology_id&gt;&#xd;
        &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
      &lt;/language&gt;&#xd;
      &lt;purpose&gt;Not Specified&lt;/purpose&gt;&#xd;
    &lt;/details&gt;&#xd;
  &lt;/description&gt;&#xd;
  &lt;uid&gt;&#xd;
    &lt;value&gt;711d7d49-b3c6-4a6a-a6b4-a4bd02fc3123&lt;/value&gt;&#xd;
  &lt;/uid&gt;&#xd;
  &lt;template_id&gt;&#xd;
    &lt;value&gt;minimal_evaluation.en.v1&lt;/value&gt;&#xd;
  &lt;/template_id&gt;&#xd;
  &lt;concept&gt;Minimal evaluation&lt;/concept&gt;&#xd;
  &lt;definition&gt;&#xd;
    &lt;rm_type_name&gt;COMPOSITION&lt;/rm_type_name&gt;&#xd;
    &lt;occurrences&gt;&#xd;
      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
      &lt;lower&gt;1&lt;/lower&gt;&#xd;
      &lt;upper&gt;1&lt;/upper&gt;&#xd;
    &lt;/occurrences&gt;&#xd;
    &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;category&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;1&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;DV_CODED_TEXT&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;1&lt;/lower&gt;&#xd;
          &lt;upper&gt;1&lt;/upper&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id /&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;defining_code&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_CODE_PHRASE&quot;&gt;&#xd;
            &lt;rm_type_name&gt;CODE_PHRASE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id /&gt;&#xd;
            &lt;terminology_id&gt;&#xd;
              &lt;value&gt;openehr&lt;/value&gt;&#xd;
            &lt;/terminology_id&gt;&#xd;
            &lt;code_list&gt;433&lt;/code_list&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
      &lt;/children&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;content&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_ARCHETYPE_ROOT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;EVALUATION&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;data&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
            &lt;rm_type_name&gt;ITEM_TREE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id&gt;at0001&lt;/node_id&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;items&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;ELEMENT&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id&gt;at0002&lt;/node_id&gt;&#xd;
                &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                  &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                  &lt;existence&gt;&#xd;
                    &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                    &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                    &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                    &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                    &lt;lower&gt;0&lt;/lower&gt;&#xd;
                    &lt;upper&gt;1&lt;/upper&gt;&#xd;
                  &lt;/existence&gt;&#xd;
                  &lt;children xsi:type=&quot;C_DV_QUANTITY&quot;&gt;&#xd;
                    &lt;rm_type_name&gt;DV_QUANTITY&lt;/rm_type_name&gt;&#xd;
                    &lt;occurrences&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;1&lt;/lower&gt;&#xd;
                      &lt;upper&gt;1&lt;/upper&gt;&#xd;
                    &lt;/occurrences&gt;&#xd;
                    &lt;node_id /&gt;&#xd;
                    &lt;property&gt;&#xd;
                      &lt;terminology_id&gt;&#xd;
                        &lt;value&gt;openehr&lt;/value&gt;&#xd;
                      &lt;/terminology_id&gt;&#xd;
                      &lt;code_string&gt;124&lt;/code_string&gt;&#xd;
                    &lt;/property&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;units&gt;kg&lt;/units&gt;&#xd;
                    &lt;/list&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;units&gt;mg&lt;/units&gt;&#xd;
                    &lt;/list&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;units&gt;gm&lt;/units&gt;&#xd;
                    &lt;/list&gt;&#xd;
                  &lt;/children&gt;&#xd;
                &lt;/attributes&gt;&#xd;
              &lt;/children&gt;&#xd;
              &lt;cardinality&gt;&#xd;
                &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                &lt;interval&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;/interval&gt;&#xd;
              &lt;/cardinality&gt;&#xd;
            &lt;/attributes&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
        &lt;archetype_id&gt;&#xd;
          &lt;value&gt;openEHR-EHR-EVALUATION.minimal.v1&lt;/value&gt;&#xd;
        &lt;/archetype_id&gt;&#xd;
        &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0001&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Arbol&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0002&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;quantity&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
      &lt;/children&gt;&#xd;
      &lt;cardinality&gt;&#xd;
        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
        &lt;interval&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/interval&gt;&#xd;
      &lt;/cardinality&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;archetype_id&gt;&#xd;
      &lt;value&gt;openEHR-EHR-COMPOSITION.minimal.v1&lt;/value&gt;&#xd;
    &lt;/archetype_id&gt;&#xd;
    &lt;template_id&gt;&#xd;
      &lt;value&gt;minimal_evaluation.en.v1&lt;/value&gt;&#xd;
    &lt;/template_id&gt;&#xd;
    &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
      &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
      &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
    &lt;/term_definitions&gt;&#xd;
  &lt;/definition&gt;&#xd;
&lt;/template&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/definition/template/adl1.4</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /definition/template/adl1.4 (minimal_observation)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;!--Operational template XML automatically generated by Ocean Template Designer Version 2.8.94Beta--&gt;&#xd;
&lt;template xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.openehr.org/v1&quot;&gt;&#xd;
  &lt;language&gt;&#xd;
    &lt;terminology_id&gt;&#xd;
      &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
    &lt;/terminology_id&gt;&#xd;
    &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
  &lt;/language&gt;&#xd;
  &lt;description&gt;&#xd;
    &lt;original_author id=&quot;Original Author&quot;&gt;Not Specified&lt;/original_author&gt;&#xd;
    &lt;lifecycle_state&gt;Initial&lt;/lifecycle_state&gt;&#xd;
    &lt;other_details id=&quot;MetaDataSet:Sample Set &quot;&gt;Template metadata sample set &lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Acknowledgements&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Business Process Level&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Care setting&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Client group&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Clinical Record Element&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Copyright&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Issues&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Owner&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Sign off&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Speciality&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;User roles&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;details&gt;&#xd;
      &lt;language&gt;&#xd;
        &lt;terminology_id&gt;&#xd;
          &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
        &lt;/terminology_id&gt;&#xd;
        &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
      &lt;/language&gt;&#xd;
      &lt;purpose&gt;Not Specified&lt;/purpose&gt;&#xd;
    &lt;/details&gt;&#xd;
  &lt;/description&gt;&#xd;
  &lt;uid&gt;&#xd;
    &lt;value&gt;1b8ac1b3-feb8-4231-acdb-cceb14e13fea&lt;/value&gt;&#xd;
  &lt;/uid&gt;&#xd;
  &lt;template_id&gt;&#xd;
    &lt;value&gt;minimal_observation.en.v1&lt;/value&gt;&#xd;
  &lt;/template_id&gt;&#xd;
  &lt;concept&gt;Minimal observation&lt;/concept&gt;&#xd;
  &lt;definition&gt;&#xd;
    &lt;rm_type_name&gt;COMPOSITION&lt;/rm_type_name&gt;&#xd;
    &lt;occurrences&gt;&#xd;
      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
      &lt;lower&gt;1&lt;/lower&gt;&#xd;
      &lt;upper&gt;1&lt;/upper&gt;&#xd;
    &lt;/occurrences&gt;&#xd;
    &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;category&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;1&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;DV_CODED_TEXT&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;1&lt;/lower&gt;&#xd;
          &lt;upper&gt;1&lt;/upper&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id /&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;defining_code&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_CODE_PHRASE&quot;&gt;&#xd;
            &lt;rm_type_name&gt;CODE_PHRASE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id /&gt;&#xd;
            &lt;terminology_id&gt;&#xd;
              &lt;value&gt;openehr&lt;/value&gt;&#xd;
            &lt;/terminology_id&gt;&#xd;
            &lt;code_list&gt;433&lt;/code_list&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
      &lt;/children&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;content&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_ARCHETYPE_ROOT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;OBSERVATION&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;data&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
            &lt;rm_type_name&gt;HISTORY&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id&gt;at0001&lt;/node_id&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;events&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;EVENT&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id&gt;at0002&lt;/node_id&gt;&#xd;
                &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                  &lt;rm_attribute_name&gt;data&lt;/rm_attribute_name&gt;&#xd;
                  &lt;existence&gt;&#xd;
                    &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                    &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                    &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                    &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                    &lt;lower&gt;1&lt;/lower&gt;&#xd;
                    &lt;upper&gt;1&lt;/upper&gt;&#xd;
                  &lt;/existence&gt;&#xd;
                  &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                    &lt;rm_type_name&gt;ITEM_TREE&lt;/rm_type_name&gt;&#xd;
                    &lt;occurrences&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;1&lt;/lower&gt;&#xd;
                      &lt;upper&gt;1&lt;/upper&gt;&#xd;
                    &lt;/occurrences&gt;&#xd;
                    &lt;node_id&gt;at0003&lt;/node_id&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;items&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;0&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;ELEMENT&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;0&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id&gt;at0004&lt;/node_id&gt;&#xd;
                        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                          &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                          &lt;existence&gt;&#xd;
                            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                            &lt;lower&gt;0&lt;/lower&gt;&#xd;
                            &lt;upper&gt;1&lt;/upper&gt;&#xd;
                          &lt;/existence&gt;&#xd;
                          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                            &lt;rm_type_name&gt;DV_TEXT&lt;/rm_type_name&gt;&#xd;
                            &lt;occurrences&gt;&#xd;
                              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                              &lt;lower&gt;1&lt;/lower&gt;&#xd;
                              &lt;upper&gt;1&lt;/upper&gt;&#xd;
                            &lt;/occurrences&gt;&#xd;
                            &lt;node_id /&gt;&#xd;
                          &lt;/children&gt;&#xd;
                        &lt;/attributes&gt;&#xd;
                      &lt;/children&gt;&#xd;
                      &lt;cardinality&gt;&#xd;
                        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                        &lt;interval&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;0&lt;/lower&gt;&#xd;
                        &lt;/interval&gt;&#xd;
                      &lt;/cardinality&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                  &lt;/children&gt;&#xd;
                &lt;/attributes&gt;&#xd;
              &lt;/children&gt;&#xd;
              &lt;cardinality&gt;&#xd;
                &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                &lt;interval&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;1&lt;/lower&gt;&#xd;
                &lt;/interval&gt;&#xd;
              &lt;/cardinality&gt;&#xd;
            &lt;/attributes&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
        &lt;archetype_id&gt;&#xd;
          &lt;value&gt;openEHR-EHR-OBSERVATION.minimal.v1&lt;/value&gt;&#xd;
        &lt;/archetype_id&gt;&#xd;
        &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0001&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Event Series&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0002&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Cualquier evento&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0003&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Arbol&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0004&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;text&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
      &lt;/children&gt;&#xd;
      &lt;cardinality&gt;&#xd;
        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
        &lt;interval&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/interval&gt;&#xd;
      &lt;/cardinality&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;archetype_id&gt;&#xd;
      &lt;value&gt;openEHR-EHR-COMPOSITION.minimal.v1&lt;/value&gt;&#xd;
    &lt;/archetype_id&gt;&#xd;
    &lt;template_id&gt;&#xd;
      &lt;value&gt;minimal_observation.en.v1&lt;/value&gt;&#xd;
    &lt;/template_id&gt;&#xd;
    &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
      &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
      &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
    &lt;/term_definitions&gt;&#xd;
  &lt;/definition&gt;&#xd;
&lt;/template&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/definition/template/adl1.4</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /definition/template/adl1.4 (minimal_instruction)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;!--Operational template XML automatically generated by Ocean Template Designer Version 2.8.94Beta--&gt;&#xd;
&lt;template xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.openehr.org/v1&quot;&gt;&#xd;
  &lt;language&gt;&#xd;
    &lt;terminology_id&gt;&#xd;
      &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
    &lt;/terminology_id&gt;&#xd;
    &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
  &lt;/language&gt;&#xd;
  &lt;description&gt;&#xd;
    &lt;original_author id=&quot;Original Author&quot;&gt;Not Specified&lt;/original_author&gt;&#xd;
    &lt;lifecycle_state&gt;Initial&lt;/lifecycle_state&gt;&#xd;
    &lt;other_details id=&quot;MetaDataSet:Sample Set &quot;&gt;Template metadata sample set &lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Acknowledgements&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Business Process Level&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Care setting&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Client group&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Clinical Record Element&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Copyright&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Issues&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Owner&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Sign off&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Speciality&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;User roles&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;details&gt;&#xd;
      &lt;language&gt;&#xd;
        &lt;terminology_id&gt;&#xd;
          &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
        &lt;/terminology_id&gt;&#xd;
        &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
      &lt;/language&gt;&#xd;
      &lt;purpose&gt;Not Specified&lt;/purpose&gt;&#xd;
    &lt;/details&gt;&#xd;
  &lt;/description&gt;&#xd;
  &lt;uid&gt;&#xd;
    &lt;value&gt;22a17751-e3a4-45c0-aafd-f3430cb9e253&lt;/value&gt;&#xd;
  &lt;/uid&gt;&#xd;
  &lt;template_id&gt;&#xd;
    &lt;value&gt;minimal_instruction.en.v1&lt;/value&gt;&#xd;
  &lt;/template_id&gt;&#xd;
  &lt;concept&gt;Minimal instruction&lt;/concept&gt;&#xd;
  &lt;definition&gt;&#xd;
    &lt;rm_type_name&gt;COMPOSITION&lt;/rm_type_name&gt;&#xd;
    &lt;occurrences&gt;&#xd;
      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
      &lt;lower&gt;1&lt;/lower&gt;&#xd;
      &lt;upper&gt;1&lt;/upper&gt;&#xd;
    &lt;/occurrences&gt;&#xd;
    &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;category&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;1&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;DV_CODED_TEXT&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;1&lt;/lower&gt;&#xd;
          &lt;upper&gt;1&lt;/upper&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id /&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;defining_code&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_CODE_PHRASE&quot;&gt;&#xd;
            &lt;rm_type_name&gt;CODE_PHRASE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id /&gt;&#xd;
            &lt;terminology_id&gt;&#xd;
              &lt;value&gt;openehr&lt;/value&gt;&#xd;
            &lt;/terminology_id&gt;&#xd;
            &lt;code_list&gt;433&lt;/code_list&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
      &lt;/children&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;content&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_ARCHETYPE_ROOT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;INSTRUCTION&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;activities&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;0&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
            &lt;rm_type_name&gt;ACTIVITY&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;0&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id&gt;at0001&lt;/node_id&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;action_archetype_id&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;1&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;STRING&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;1&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id /&gt;&#xd;
                &lt;item xsi:type=&quot;C_STRING&quot;&gt;&#xd;
                  &lt;pattern&gt;openEHR-EHR-ACTION\.minimal\.v1&lt;/pattern&gt;&#xd;
                &lt;/item&gt;&#xd;
              &lt;/children&gt;&#xd;
            &lt;/attributes&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;description&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;1&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;ITEM_TREE&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;1&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id&gt;at0002&lt;/node_id&gt;&#xd;
                &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
                  &lt;rm_attribute_name&gt;items&lt;/rm_attribute_name&gt;&#xd;
                  &lt;existence&gt;&#xd;
                    &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                    &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                    &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                    &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                    &lt;lower&gt;0&lt;/lower&gt;&#xd;
                    &lt;upper&gt;1&lt;/upper&gt;&#xd;
                  &lt;/existence&gt;&#xd;
                  &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                    &lt;rm_type_name&gt;ELEMENT&lt;/rm_type_name&gt;&#xd;
                    &lt;occurrences&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;0&lt;/lower&gt;&#xd;
                      &lt;upper&gt;1&lt;/upper&gt;&#xd;
                    &lt;/occurrences&gt;&#xd;
                    &lt;node_id&gt;at0003&lt;/node_id&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;0&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;DV_DURATION&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;1&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id /&gt;&#xd;
                        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                          &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                          &lt;existence&gt;&#xd;
                            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                            &lt;lower&gt;1&lt;/lower&gt;&#xd;
                            &lt;upper&gt;1&lt;/upper&gt;&#xd;
                          &lt;/existence&gt;&#xd;
                          &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                            &lt;rm_type_name&gt;DURATION&lt;/rm_type_name&gt;&#xd;
                            &lt;occurrences&gt;&#xd;
                              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                              &lt;lower&gt;1&lt;/lower&gt;&#xd;
                              &lt;upper&gt;1&lt;/upper&gt;&#xd;
                            &lt;/occurrences&gt;&#xd;
                            &lt;node_id /&gt;&#xd;
                            &lt;item xsi:type=&quot;C_DURATION&quot;&gt;&#xd;
                              &lt;pattern&gt;PTM&lt;/pattern&gt;&#xd;
                            &lt;/item&gt;&#xd;
                          &lt;/children&gt;&#xd;
                        &lt;/attributes&gt;&#xd;
                      &lt;/children&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                  &lt;/children&gt;&#xd;
                  &lt;cardinality&gt;&#xd;
                    &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                    &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                    &lt;interval&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;0&lt;/lower&gt;&#xd;
                    &lt;/interval&gt;&#xd;
                  &lt;/cardinality&gt;&#xd;
                &lt;/attributes&gt;&#xd;
              &lt;/children&gt;&#xd;
            &lt;/attributes&gt;&#xd;
          &lt;/children&gt;&#xd;
          &lt;cardinality&gt;&#xd;
            &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
            &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
            &lt;interval&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;0&lt;/lower&gt;&#xd;
            &lt;/interval&gt;&#xd;
          &lt;/cardinality&gt;&#xd;
        &lt;/attributes&gt;&#xd;
        &lt;archetype_id&gt;&#xd;
          &lt;value&gt;openEHR-EHR-INSTRUCTION.minimal.v1&lt;/value&gt;&#xd;
        &lt;/archetype_id&gt;&#xd;
        &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0001&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;Current Activity&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Current Activity&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0002&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Arbol&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0003&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;duration&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
      &lt;/children&gt;&#xd;
      &lt;cardinality&gt;&#xd;
        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
        &lt;interval&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/interval&gt;&#xd;
      &lt;/cardinality&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;archetype_id&gt;&#xd;
      &lt;value&gt;openEHR-EHR-COMPOSITION.minimal.v1&lt;/value&gt;&#xd;
    &lt;/archetype_id&gt;&#xd;
    &lt;template_id&gt;&#xd;
      &lt;value&gt;minimal_instruction.en.v1&lt;/value&gt;&#xd;
    &lt;/template_id&gt;&#xd;
    &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
      &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
      &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
    &lt;/term_definitions&gt;&#xd;
  &lt;/definition&gt;&#xd;
&lt;/template&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/definition/template/adl1.4</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /definition/template/adl1.4 (minimal_action)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;!--Operational template XML automatically generated by Ocean Template Designer Version 2.8.94Beta--&gt;&#xd;
&lt;template xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.openehr.org/v1&quot;&gt;&#xd;
  &lt;language&gt;&#xd;
    &lt;terminology_id&gt;&#xd;
      &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
    &lt;/terminology_id&gt;&#xd;
    &lt;code_string&gt;es&lt;/code_string&gt;&#xd;
  &lt;/language&gt;&#xd;
  &lt;description&gt;&#xd;
    &lt;original_author id=&quot;Original Author&quot;&gt;Not Specified&lt;/original_author&gt;&#xd;
    &lt;lifecycle_state&gt;Initial&lt;/lifecycle_state&gt;&#xd;
    &lt;other_details id=&quot;MetaDataSet:Sample Set &quot;&gt;Template metadata sample set &lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Acknowledgements&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Business Process Level&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Care setting&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Client group&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Clinical Record Element&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Copyright&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Issues&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Owner&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Sign off&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Speciality&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;User roles&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;details&gt;&#xd;
      &lt;language&gt;&#xd;
        &lt;terminology_id&gt;&#xd;
          &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
        &lt;/terminology_id&gt;&#xd;
        &lt;code_string&gt;es&lt;/code_string&gt;&#xd;
      &lt;/language&gt;&#xd;
      &lt;purpose&gt;Not Specified&lt;/purpose&gt;&#xd;
    &lt;/details&gt;&#xd;
  &lt;/description&gt;&#xd;
  &lt;uid&gt;&#xd;
    &lt;value&gt;cb5aa21f-82d9-440d-908d-9fa4087263a9&lt;/value&gt;&#xd;
  &lt;/uid&gt;&#xd;
  &lt;template_id&gt;&#xd;
    &lt;value&gt;Minimal action 2&lt;/value&gt;&#xd;
  &lt;/template_id&gt;&#xd;
  &lt;concept&gt;Minimal action 2&lt;/concept&gt;&#xd;
  &lt;definition&gt;&#xd;
    &lt;rm_type_name&gt;COMPOSITION&lt;/rm_type_name&gt;&#xd;
    &lt;occurrences&gt;&#xd;
      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
      &lt;lower&gt;1&lt;/lower&gt;&#xd;
      &lt;upper&gt;1&lt;/upper&gt;&#xd;
    &lt;/occurrences&gt;&#xd;
    &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;category&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;1&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;DV_CODED_TEXT&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;1&lt;/lower&gt;&#xd;
          &lt;upper&gt;1&lt;/upper&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id /&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;defining_code&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_CODE_PHRASE&quot;&gt;&#xd;
            &lt;rm_type_name&gt;CODE_PHRASE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id /&gt;&#xd;
            &lt;terminology_id&gt;&#xd;
              &lt;value&gt;openehr&lt;/value&gt;&#xd;
            &lt;/terminology_id&gt;&#xd;
            &lt;code_list&gt;433&lt;/code_list&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
      &lt;/children&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;content&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_ARCHETYPE_ROOT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;ACTION&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;description&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
            &lt;rm_type_name&gt;ITEM_TREE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id&gt;at0001&lt;/node_id&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;items&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;ELEMENT&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id&gt;at0002&lt;/node_id&gt;&#xd;
                &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                  &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                  &lt;existence&gt;&#xd;
                    &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                    &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                    &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                    &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                    &lt;lower&gt;0&lt;/lower&gt;&#xd;
                    &lt;upper&gt;1&lt;/upper&gt;&#xd;
                  &lt;/existence&gt;&#xd;
                  &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                    &lt;rm_type_name&gt;DV_PROPORTION&lt;/rm_type_name&gt;&#xd;
                    &lt;occurrences&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;1&lt;/lower&gt;&#xd;
                      &lt;upper&gt;1&lt;/upper&gt;&#xd;
                    &lt;/occurrences&gt;&#xd;
                    &lt;node_id /&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;numerator&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;1&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;REAL&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;1&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id /&gt;&#xd;
                        &lt;item xsi:type=&quot;C_REAL&quot;&gt;&#xd;
                          &lt;range&gt;&#xd;
                            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                            &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                            &lt;lower&gt;0&lt;/lower&gt;&#xd;
                          &lt;/range&gt;&#xd;
                        &lt;/item&gt;&#xd;
                      &lt;/children&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;denominator&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;1&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;REAL&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;1&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id /&gt;&#xd;
                        &lt;item xsi:type=&quot;C_REAL&quot;&gt;&#xd;
                          &lt;range&gt;&#xd;
                            &lt;lower_included&gt;false&lt;/lower_included&gt;&#xd;
                            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                            &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                            &lt;lower&gt;0&lt;/lower&gt;&#xd;
                          &lt;/range&gt;&#xd;
                        &lt;/item&gt;&#xd;
                      &lt;/children&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;is_integral&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;1&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;BOOLEAN&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;1&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id /&gt;&#xd;
                        &lt;item xsi:type=&quot;C_BOOLEAN&quot;&gt;&#xd;
                          &lt;true_valid&gt;false&lt;/true_valid&gt;&#xd;
                          &lt;false_valid&gt;true&lt;/false_valid&gt;&#xd;
                        &lt;/item&gt;&#xd;
                      &lt;/children&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                      &lt;rm_attribute_name&gt;type&lt;/rm_attribute_name&gt;&#xd;
                      &lt;existence&gt;&#xd;
                        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                        &lt;lower&gt;1&lt;/lower&gt;&#xd;
                        &lt;upper&gt;1&lt;/upper&gt;&#xd;
                      &lt;/existence&gt;&#xd;
                      &lt;children xsi:type=&quot;C_PRIMITIVE_OBJECT&quot;&gt;&#xd;
                        &lt;rm_type_name&gt;INTEGER&lt;/rm_type_name&gt;&#xd;
                        &lt;occurrences&gt;&#xd;
                          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                          &lt;lower&gt;1&lt;/lower&gt;&#xd;
                          &lt;upper&gt;1&lt;/upper&gt;&#xd;
                        &lt;/occurrences&gt;&#xd;
                        &lt;node_id /&gt;&#xd;
                        &lt;item xsi:type=&quot;C_INTEGER&quot;&gt;&#xd;
                          &lt;list&gt;3&lt;/list&gt;&#xd;
                          &lt;list&gt;4&lt;/list&gt;&#xd;
                        &lt;/item&gt;&#xd;
                      &lt;/children&gt;&#xd;
                    &lt;/attributes&gt;&#xd;
                  &lt;/children&gt;&#xd;
                &lt;/attributes&gt;&#xd;
              &lt;/children&gt;&#xd;
              &lt;cardinality&gt;&#xd;
                &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                &lt;interval&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;/interval&gt;&#xd;
              &lt;/cardinality&gt;&#xd;
            &lt;/attributes&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
        &lt;archetype_id&gt;&#xd;
          &lt;value&gt;openEHR-EHR-ACTION.minimal_2.v1&lt;/value&gt;&#xd;
        &lt;/archetype_id&gt;&#xd;
        &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Minimal 2&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0001&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Arbol&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0002&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Proportion&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
      &lt;/children&gt;&#xd;
      &lt;cardinality&gt;&#xd;
        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
        &lt;interval&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/interval&gt;&#xd;
      &lt;/cardinality&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;archetype_id&gt;&#xd;
      &lt;value&gt;openEHR-EHR-COMPOSITION.minimal.v1&lt;/value&gt;&#xd;
    &lt;/archetype_id&gt;&#xd;
    &lt;template_id&gt;&#xd;
      &lt;value&gt;Minimal action 2&lt;/value&gt;&#xd;
    &lt;/template_id&gt;&#xd;
    &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
      &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
      &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
    &lt;/term_definitions&gt;&#xd;
  &lt;/definition&gt;&#xd;
&lt;/template&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/definition/template/adl1.4</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /definition/template/adl1.4 (minimal_admin)" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;!--Operational template XML automatically generated by Ocean Template Designer Version 2.8.94Beta--&gt;&#xd;
&lt;template xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns=&quot;http://schemas.openehr.org/v1&quot;&gt;&#xd;
  &lt;language&gt;&#xd;
    &lt;terminology_id&gt;&#xd;
      &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
    &lt;/terminology_id&gt;&#xd;
    &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
  &lt;/language&gt;&#xd;
  &lt;description&gt;&#xd;
    &lt;original_author id=&quot;Original Author&quot;&gt;Not Specified&lt;/original_author&gt;&#xd;
    &lt;lifecycle_state&gt;Initial&lt;/lifecycle_state&gt;&#xd;
    &lt;other_details id=&quot;MetaDataSet:Sample Set &quot;&gt;Template metadata sample set &lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Acknowledgements&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Business Process Level&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Care setting&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Client group&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Clinical Record Element&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Copyright&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Issues&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Owner&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Sign off&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;Speciality&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;other_details id=&quot;User roles&quot;&gt;&lt;/other_details&gt;&#xd;
    &lt;details&gt;&#xd;
      &lt;language&gt;&#xd;
        &lt;terminology_id&gt;&#xd;
          &lt;value&gt;ISO_639-1&lt;/value&gt;&#xd;
        &lt;/terminology_id&gt;&#xd;
        &lt;code_string&gt;en&lt;/code_string&gt;&#xd;
      &lt;/language&gt;&#xd;
      &lt;purpose&gt;Not Specified&lt;/purpose&gt;&#xd;
    &lt;/details&gt;&#xd;
  &lt;/description&gt;&#xd;
  &lt;uid&gt;&#xd;
    &lt;value&gt;c53b4d8d-23b6-4333-b7f5-a2a5ca98278b&lt;/value&gt;&#xd;
  &lt;/uid&gt;&#xd;
  &lt;template_id&gt;&#xd;
    &lt;value&gt;minimal_admin.en.v1&lt;/value&gt;&#xd;
  &lt;/template_id&gt;&#xd;
  &lt;concept&gt;Minimal admin&lt;/concept&gt;&#xd;
  &lt;definition&gt;&#xd;
    &lt;rm_type_name&gt;COMPOSITION&lt;/rm_type_name&gt;&#xd;
    &lt;occurrences&gt;&#xd;
      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
      &lt;lower&gt;1&lt;/lower&gt;&#xd;
      &lt;upper&gt;1&lt;/upper&gt;&#xd;
    &lt;/occurrences&gt;&#xd;
    &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;category&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;1&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;DV_CODED_TEXT&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;1&lt;/lower&gt;&#xd;
          &lt;upper&gt;1&lt;/upper&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id /&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;defining_code&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_CODE_PHRASE&quot;&gt;&#xd;
            &lt;rm_type_name&gt;CODE_PHRASE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id /&gt;&#xd;
            &lt;terminology_id&gt;&#xd;
              &lt;value&gt;openehr&lt;/value&gt;&#xd;
            &lt;/terminology_id&gt;&#xd;
            &lt;code_list&gt;433&lt;/code_list&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
      &lt;/children&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
      &lt;rm_attribute_name&gt;content&lt;/rm_attribute_name&gt;&#xd;
      &lt;existence&gt;&#xd;
        &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
        &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
        &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
        &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
        &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;upper&gt;1&lt;/upper&gt;&#xd;
      &lt;/existence&gt;&#xd;
      &lt;children xsi:type=&quot;C_ARCHETYPE_ROOT&quot;&gt;&#xd;
        &lt;rm_type_name&gt;ADMIN_ENTRY&lt;/rm_type_name&gt;&#xd;
        &lt;occurrences&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/occurrences&gt;&#xd;
        &lt;node_id&gt;at0000&lt;/node_id&gt;&#xd;
        &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
          &lt;rm_attribute_name&gt;data&lt;/rm_attribute_name&gt;&#xd;
          &lt;existence&gt;&#xd;
            &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
            &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
            &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
            &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
            &lt;lower&gt;1&lt;/lower&gt;&#xd;
            &lt;upper&gt;1&lt;/upper&gt;&#xd;
          &lt;/existence&gt;&#xd;
          &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
            &lt;rm_type_name&gt;ITEM_TREE&lt;/rm_type_name&gt;&#xd;
            &lt;occurrences&gt;&#xd;
              &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
              &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
              &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
              &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
              &lt;lower&gt;1&lt;/lower&gt;&#xd;
              &lt;upper&gt;1&lt;/upper&gt;&#xd;
            &lt;/occurrences&gt;&#xd;
            &lt;node_id&gt;at0001&lt;/node_id&gt;&#xd;
            &lt;attributes xsi:type=&quot;C_MULTIPLE_ATTRIBUTE&quot;&gt;&#xd;
              &lt;rm_attribute_name&gt;items&lt;/rm_attribute_name&gt;&#xd;
              &lt;existence&gt;&#xd;
                &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;upper&gt;1&lt;/upper&gt;&#xd;
              &lt;/existence&gt;&#xd;
              &lt;children xsi:type=&quot;C_COMPLEX_OBJECT&quot;&gt;&#xd;
                &lt;rm_type_name&gt;ELEMENT&lt;/rm_type_name&gt;&#xd;
                &lt;occurrences&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                  &lt;upper&gt;1&lt;/upper&gt;&#xd;
                &lt;/occurrences&gt;&#xd;
                &lt;node_id&gt;at0002&lt;/node_id&gt;&#xd;
                &lt;attributes xsi:type=&quot;C_SINGLE_ATTRIBUTE&quot;&gt;&#xd;
                  &lt;rm_attribute_name&gt;value&lt;/rm_attribute_name&gt;&#xd;
                  &lt;existence&gt;&#xd;
                    &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                    &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                    &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                    &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                    &lt;lower&gt;0&lt;/lower&gt;&#xd;
                    &lt;upper&gt;1&lt;/upper&gt;&#xd;
                  &lt;/existence&gt;&#xd;
                  &lt;children xsi:type=&quot;C_DV_ORDINAL&quot;&gt;&#xd;
                    &lt;rm_type_name&gt;DV_ORDINAL&lt;/rm_type_name&gt;&#xd;
                    &lt;occurrences&gt;&#xd;
                      &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                      &lt;upper_included&gt;true&lt;/upper_included&gt;&#xd;
                      &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                      &lt;upper_unbounded&gt;false&lt;/upper_unbounded&gt;&#xd;
                      &lt;lower&gt;1&lt;/lower&gt;&#xd;
                      &lt;upper&gt;1&lt;/upper&gt;&#xd;
                    &lt;/occurrences&gt;&#xd;
                    &lt;node_id /&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;value&gt;1&lt;/value&gt;&#xd;
                      &lt;symbol&gt;&#xd;
                        &lt;value /&gt;&#xd;
                        &lt;defining_code&gt;&#xd;
                          &lt;terminology_id&gt;&#xd;
                            &lt;value&gt;local&lt;/value&gt;&#xd;
                          &lt;/terminology_id&gt;&#xd;
                          &lt;code_string&gt;at0003&lt;/code_string&gt;&#xd;
                        &lt;/defining_code&gt;&#xd;
                      &lt;/symbol&gt;&#xd;
                    &lt;/list&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;value&gt;2&lt;/value&gt;&#xd;
                      &lt;symbol&gt;&#xd;
                        &lt;value /&gt;&#xd;
                        &lt;defining_code&gt;&#xd;
                          &lt;terminology_id&gt;&#xd;
                            &lt;value&gt;local&lt;/value&gt;&#xd;
                          &lt;/terminology_id&gt;&#xd;
                          &lt;code_string&gt;at0004&lt;/code_string&gt;&#xd;
                        &lt;/defining_code&gt;&#xd;
                      &lt;/symbol&gt;&#xd;
                    &lt;/list&gt;&#xd;
                    &lt;list&gt;&#xd;
                      &lt;value&gt;3&lt;/value&gt;&#xd;
                      &lt;symbol&gt;&#xd;
                        &lt;value /&gt;&#xd;
                        &lt;defining_code&gt;&#xd;
                          &lt;terminology_id&gt;&#xd;
                            &lt;value&gt;local&lt;/value&gt;&#xd;
                          &lt;/terminology_id&gt;&#xd;
                          &lt;code_string&gt;at0005&lt;/code_string&gt;&#xd;
                        &lt;/defining_code&gt;&#xd;
                      &lt;/symbol&gt;&#xd;
                    &lt;/list&gt;&#xd;
                  &lt;/children&gt;&#xd;
                &lt;/attributes&gt;&#xd;
              &lt;/children&gt;&#xd;
              &lt;cardinality&gt;&#xd;
                &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
                &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
                &lt;interval&gt;&#xd;
                  &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
                  &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
                  &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
                  &lt;lower&gt;0&lt;/lower&gt;&#xd;
                &lt;/interval&gt;&#xd;
              &lt;/cardinality&gt;&#xd;
            &lt;/attributes&gt;&#xd;
          &lt;/children&gt;&#xd;
        &lt;/attributes&gt;&#xd;
        &lt;archetype_id&gt;&#xd;
          &lt;value&gt;openEHR-EHR-ADMIN_ENTRY.minimal.v1&lt;/value&gt;&#xd;
        &lt;/archetype_id&gt;&#xd;
        &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0001&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;@ internal @&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;Arbol&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0002&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;ordinal&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0003&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;option 1&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0004&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;option 2&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
        &lt;term_definitions code=&quot;at0005&quot;&gt;&#xd;
          &lt;items id=&quot;description&quot;&gt;*&lt;/items&gt;&#xd;
          &lt;items id=&quot;text&quot;&gt;option 3&lt;/items&gt;&#xd;
        &lt;/term_definitions&gt;&#xd;
      &lt;/children&gt;&#xd;
      &lt;cardinality&gt;&#xd;
        &lt;is_ordered&gt;false&lt;/is_ordered&gt;&#xd;
        &lt;is_unique&gt;false&lt;/is_unique&gt;&#xd;
        &lt;interval&gt;&#xd;
          &lt;lower_included&gt;true&lt;/lower_included&gt;&#xd;
          &lt;lower_unbounded&gt;false&lt;/lower_unbounded&gt;&#xd;
          &lt;upper_unbounded&gt;true&lt;/upper_unbounded&gt;&#xd;
          &lt;lower&gt;0&lt;/lower&gt;&#xd;
        &lt;/interval&gt;&#xd;
      &lt;/cardinality&gt;&#xd;
    &lt;/attributes&gt;&#xd;
    &lt;archetype_id&gt;&#xd;
      &lt;value&gt;openEHR-EHR-COMPOSITION.minimal.v1&lt;/value&gt;&#xd;
    &lt;/archetype_id&gt;&#xd;
    &lt;template_id&gt;&#xd;
      &lt;value&gt;minimal_admin.en.v1&lt;/value&gt;&#xd;
    &lt;/template_id&gt;&#xd;
    &lt;term_definitions code=&quot;at0000&quot;&gt;&#xd;
      &lt;items id=&quot;description&quot;&gt;unknown&lt;/items&gt;&#xd;
      &lt;items id=&quot;text&quot;&gt;Minimal&lt;/items&gt;&#xd;
    &lt;/term_definitions&gt;&#xd;
  &lt;/definition&gt;&#xd;
&lt;/template&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/definition/template/adl1.4</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group (ehrs + compositions)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Prefer</stringProp>
              <stringProp name="Header.value">return=representation</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /ehr" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.ehr_id.value</stringProp>
            <stringProp name="EXPECTED_VALUE">[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">true</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ehr_id</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.ehr_id.value</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="false">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /contribution" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;_type&quot;: &quot;CONTRIBUTION&quot;,&#xd;
  &quot;versions&quot;: [&#xd;
    {&#xd;
      &quot;_type&quot;: &quot;ORIGINAL_VERSION&quot;,&#xd;
      &quot;commit_audit&quot;: {&#xd;
        &quot;_type&quot;: &quot;AUDIT_DETAILS&quot;,&#xd;
        &quot;system_id&quot;: &quot;test-system-id&quot;,&#xd;
        &quot;committer&quot;: {&#xd;
          &quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
          &quot;name&quot;: &quot;&lt;optional name of the committer&gt;&quot;,&#xd;
          &quot;external_ref&quot;: {&#xd;
            &quot;id&quot;: {&#xd;
              &quot;_type&quot;: &quot;GENERIC_ID&quot;,&#xd;
              &quot;value&quot;: &quot;&lt;OBJECT_ID&gt;&quot;,&#xd;
              &quot;scheme&quot;: &quot;&lt;ID SCHEME NAME&gt;&quot;&#xd;
            },&#xd;
            &quot;namespace&quot;: &quot;demographic&quot;,&#xd;
            &quot;type&quot;: &quot;PERSON&quot;&#xd;
          }&#xd;
        },&#xd;
        &quot;change_type&quot;: {&#xd;
          &quot;value&quot;: &quot;creation&quot;,&#xd;
          &quot;defining_code&quot;: {&#xd;
            &quot;terminology_id&quot;: {&#xd;
              &quot;value&quot;: &quot;openehr&quot;&#xd;
            },&#xd;
            &quot;code_string&quot;: &quot;249&quot;&#xd;
          }&#xd;
        },&#xd;
        &quot;description&quot;: {&#xd;
          &quot;value&quot;: &quot;optional audit description&quot;&#xd;
        }&#xd;
      },&#xd;
      &quot;data&quot;: {&#xd;
      	&quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
      	&quot;name&quot;: {&#xd;
      		&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
      		&quot;value&quot;: &quot;Minimal&quot;&#xd;
      	},&#xd;
      	&quot;archetype_details&quot;: {&#xd;
      		&quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
      		&quot;archetype_id&quot;: {&#xd;
      			&quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
      			&quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
      		},&#xd;
      		&quot;template_id&quot;: {&#xd;
      			&quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
      			&quot;value&quot;: &quot;minimal_evaluation.en.v1&quot;&#xd;
      		},&#xd;
      		&quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
      	},&#xd;
      	&quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
      	&quot;language&quot;: {&#xd;
      		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      		&quot;terminology_id&quot;: {&#xd;
      			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      			&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
      		},&#xd;
      		&quot;code_string&quot;: &quot;en&quot;&#xd;
      	},&#xd;
      	&quot;territory&quot;: {&#xd;
      		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      		&quot;terminology_id&quot;: {&#xd;
      			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      			&quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
      		},&#xd;
      		&quot;code_string&quot;: &quot;UY&quot;&#xd;
      	},&#xd;
      	&quot;category&quot;: {&#xd;
      		&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
      		&quot;value&quot;: &quot;event&quot;,&#xd;
      		&quot;defining_code&quot;: {&#xd;
      			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      			&quot;terminology_id&quot;: {&#xd;
      				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      				&quot;value&quot;: &quot;openehr&quot;&#xd;
      			},&#xd;
      			&quot;code_string&quot;: &quot;433&quot;&#xd;
      		}&#xd;
      	},&#xd;
      	&quot;composer&quot;: {&#xd;
      		&quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
      		&quot;external_ref&quot;: {&#xd;
      			&quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
      			&quot;id&quot;: {&#xd;
      				&quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
      				&quot;value&quot;: &quot;830f2fb4-1bbf-4376-9d52-77ef4b8f92e8&quot;&#xd;
      			},&#xd;
      			&quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
      			&quot;type&quot;: &quot;PERSON&quot;&#xd;
      		},&#xd;
      		&quot;name&quot;: &quot;Dr. Yamamoto&quot;&#xd;
      	},&#xd;
      	&quot;context&quot;: {&#xd;
      		&quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
      		&quot;start_time&quot;: {&#xd;
      			&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
      			&quot;value&quot;: &quot;2019-01-28T21:22:19,979+0000&quot;&#xd;
      		},&#xd;
      		&quot;setting&quot;: {&#xd;
      			&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
      			&quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
      			&quot;defining_code&quot;: {&#xd;
      				&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      				&quot;terminology_id&quot;: {&#xd;
      					&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      					&quot;value&quot;: &quot;openehr&quot;&#xd;
      				},&#xd;
      				&quot;code_string&quot;: &quot;229&quot;&#xd;
      			}&#xd;
      		}&#xd;
      	},&#xd;
      	&quot;content&quot;: [{&#xd;
      		&quot;_type&quot;: &quot;EVALUATION&quot;,&#xd;
      		&quot;name&quot;: {&#xd;
      			&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
      			&quot;value&quot;: &quot;Minimal&quot;&#xd;
      		},&#xd;
      		&quot;archetype_node_id&quot;: &quot;openEHR-EHR-EVALUATION.minimal.v1&quot;,&#xd;
      		&quot;language&quot;: {&#xd;
      			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      			&quot;terminology_id&quot;: {&#xd;
      				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      				&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
      			},&#xd;
      			&quot;code_string&quot;: &quot;en&quot;&#xd;
      		},&#xd;
      		&quot;encoding&quot;: {&#xd;
      			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      			&quot;terminology_id&quot;: {&#xd;
      				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      				&quot;value&quot;: &quot;Unicode&quot;&#xd;
      			},&#xd;
      			&quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
      		},&#xd;
      		&quot;subject&quot;: {&#xd;
      			&quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
      		},&#xd;
      		&quot;data&quot;: {&#xd;
      			&quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
      			&quot;name&quot;: {&#xd;
      				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
      				&quot;value&quot;: &quot;Arbol&quot;&#xd;
      			},&#xd;
      			&quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
      			&quot;items&quot;: [{&#xd;
      				&quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
      				&quot;name&quot;: {&#xd;
      					&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
      					&quot;value&quot;: &quot;quantity&quot;&#xd;
      				},&#xd;
      				&quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
      				&quot;value&quot;: {&#xd;
      					&quot;_type&quot;: &quot;DV_QUANTITY&quot;,&#xd;
      					&quot;magnitude&quot;: 78.5,&#xd;
      					&quot;units&quot;: &quot;kg&quot;&#xd;
      				}&#xd;
      			}]&#xd;
      		}&#xd;
      	}]&#xd;
      },&#xd;
      &quot;lifecycle_state&quot;: {&#xd;
        &quot;value&quot;: &quot;complete&quot;,&#xd;
        &quot;defining_code&quot;: {&#xd;
          &quot;terminology_id&quot;: {&#xd;
            &quot;value&quot;: &quot;openehr&quot;&#xd;
          },&#xd;
          &quot;code_string&quot;: &quot;532&quot;&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  ],&#xd;
  &quot;audit&quot;: {&#xd;
    &quot;_type&quot;: &quot;AUDIT_DETAILS&quot;,&#xd;
    &quot;system_id&quot;: &quot;test-system-id&quot;,&#xd;
    &quot;committer&quot;: {&#xd;
      &quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
      &quot;name&quot;: &quot;optional name of the committer&quot;,&#xd;
      &quot;external_ref&quot;: {&#xd;
        &quot;id&quot;: {&#xd;
          &quot;_type&quot;: &quot;GENERIC_ID&quot;,&#xd;
          &quot;value&quot;: &quot;&lt;OBJECT_ID&gt;&quot;,&#xd;
          &quot;scheme&quot;: &quot;&lt;ID SCHEME NAME&gt;&quot;&#xd;
        },&#xd;
        &quot;namespace&quot;: &quot;demographic&quot;,&#xd;
        &quot;type&quot;: &quot;PERSON&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;change_type&quot;: {&#xd;
      &quot;value&quot;: &quot;creation&quot;,&#xd;
      &quot;defining_code&quot;: {&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;value&quot;: &quot;openehr&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;249&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;description&quot;: {&#xd;
      &quot;value&quot;: &quot;optional audit description&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/contribution</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (compo minimal_evaluation commit)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /composition (minimal_evaluation)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
	&quot;name&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;Minimal&quot;&#xd;
	},&#xd;
	&quot;archetype_details&quot;: {&#xd;
		&quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
		&quot;archetype_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
		},&#xd;
		&quot;template_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;minimal_evaluation.en.v1&quot;&#xd;
		},&#xd;
		&quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
	},&#xd;
	&quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
	&quot;language&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;en&quot;&#xd;
	},&#xd;
	&quot;territory&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;UY&quot;&#xd;
	},&#xd;
	&quot;category&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;event&quot;,&#xd;
		&quot;defining_code&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;openehr&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;433&quot;&#xd;
		}&#xd;
	},&#xd;
	&quot;composer&quot;: {&#xd;
		&quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
		&quot;external_ref&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
			&quot;id&quot;: {&#xd;
				&quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
				&quot;value&quot;: &quot;830f2fb4-1bbf-4376-9d52-77ef4b8f92e8&quot;&#xd;
			},&#xd;
			&quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
			&quot;type&quot;: &quot;PERSON&quot;&#xd;
		},&#xd;
		&quot;name&quot;: &quot;Dr. Yamamoto&quot;&#xd;
	},&#xd;
	&quot;context&quot;: {&#xd;
		&quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
		&quot;start_time&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
			&quot;value&quot;: &quot;2019-01-28T21:22:19,979+0000&quot;&#xd;
		},&#xd;
		&quot;setting&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
			&quot;defining_code&quot;: {&#xd;
				&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
				&quot;terminology_id&quot;: {&#xd;
					&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
					&quot;value&quot;: &quot;openehr&quot;&#xd;
				},&#xd;
				&quot;code_string&quot;: &quot;229&quot;&#xd;
			}&#xd;
		},&#xd;
		&quot;participations&quot;: [{&#xd;
			&quot;_type&quot;: &quot;PARTICIPATION&quot;,&#xd;
			&quot;function&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;companion&quot;&#xd;
			},&#xd;
			&quot;performer&quot;: {&#xd;
				&quot;_type&quot;: &quot;PARTY_RELATED&quot;,&#xd;
				&quot;name&quot;: &quot;Betty Bix&quot;,&#xd;
				&quot;relationship&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;sister&quot;,&#xd;
					&quot;defining_code&quot;: {&#xd;
						&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
						&quot;terminology_id&quot;: {&#xd;
							&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
							&quot;value&quot;: &quot;openehr&quot;&#xd;
						},&#xd;
						&quot;code_string&quot;: &quot;24&quot;&#xd;
					}&#xd;
				}&#xd;
			},&#xd;
			&quot;mode&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;not specified&quot;,&#xd;
				&quot;defining_code&quot;: {&#xd;
					&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
					&quot;terminology_id&quot;: {&#xd;
						&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
						&quot;value&quot;: &quot;openehr&quot;&#xd;
					},&#xd;
					&quot;code_string&quot;: &quot;193&quot;&#xd;
				}&#xd;
			}&#xd;
		}]&#xd;
	},&#xd;
	&quot;content&quot;: [{&#xd;
		&quot;_type&quot;: &quot;EVALUATION&quot;,&#xd;
		&quot;name&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;Minimal&quot;&#xd;
		},&#xd;
		&quot;archetype_node_id&quot;: &quot;openEHR-EHR-EVALUATION.minimal.v1&quot;,&#xd;
		&quot;language&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;en&quot;&#xd;
		},&#xd;
		&quot;encoding&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;Unicode&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
		},&#xd;
		&quot;subject&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
		},&#xd;
		&quot;data&quot;: {&#xd;
			&quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
			&quot;name&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;Arbol&quot;&#xd;
			},&#xd;
			&quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
			&quot;items&quot;: [{&#xd;
				&quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
				&quot;name&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;quantity&quot;&#xd;
				},&#xd;
				&quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
				&quot;value&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_QUANTITY&quot;,&#xd;
					&quot;magnitude&quot;: 78.5,&#xd;
					&quot;units&quot;: &quot;kg&quot;&#xd;
				}&#xd;
			}]&#xd;
		}&#xd;
	}]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/composition</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (compo minimal_observation commit)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /composition (minimal_observation)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
	&quot;name&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;Minimal&quot;&#xd;
	},&#xd;
	&quot;archetype_details&quot;: {&#xd;
		&quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
		&quot;archetype_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
		},&#xd;
		&quot;template_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;minimal_observation.en.v1&quot;&#xd;
		},&#xd;
		&quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
	},&#xd;
	&quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
	&quot;language&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;en&quot;&#xd;
	},&#xd;
	&quot;territory&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;UY&quot;&#xd;
	},&#xd;
	&quot;category&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;event&quot;,&#xd;
		&quot;defining_code&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;openehr&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;433&quot;&#xd;
		}&#xd;
	},&#xd;
	&quot;composer&quot;: {&#xd;
		&quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
		&quot;external_ref&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
			&quot;id&quot;: {&#xd;
				&quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
				&quot;value&quot;: &quot;1f31861a-b5fd-4052-b00b-32893371fcd4&quot;&#xd;
			},&#xd;
			&quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
			&quot;type&quot;: &quot;PERSON&quot;&#xd;
		},&#xd;
		&quot;name&quot;: &quot;Dr. House&quot;&#xd;
	},&#xd;
	&quot;context&quot;: {&#xd;
		&quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
		&quot;start_time&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
			&quot;value&quot;: &quot;2019-01-28T21:22:19,501+0000&quot;&#xd;
		},&#xd;
		&quot;setting&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
			&quot;defining_code&quot;: {&#xd;
				&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
				&quot;terminology_id&quot;: {&#xd;
					&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
					&quot;value&quot;: &quot;openehr&quot;&#xd;
				},&#xd;
				&quot;code_string&quot;: &quot;229&quot;&#xd;
			}&#xd;
		},&#xd;
		&quot;participations&quot;: [{&#xd;
			&quot;_type&quot;: &quot;PARTICIPATION&quot;,&#xd;
			&quot;function&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;legal guardian&quot;&#xd;
			},&#xd;
			&quot;performer&quot;: {&#xd;
				&quot;_type&quot;: &quot;PARTY_RELATED&quot;,&#xd;
				&quot;name&quot;: &quot;Martha Stewart&quot;,&#xd;
				&quot;relationship&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;mother&quot;,&#xd;
					&quot;defining_code&quot;: {&#xd;
						&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
						&quot;terminology_id&quot;: {&#xd;
							&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
							&quot;value&quot;: &quot;openehr&quot;&#xd;
						},&#xd;
						&quot;code_string&quot;: &quot;10&quot;&#xd;
					}&#xd;
				}&#xd;
			},&#xd;
			&quot;mode&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;not specified&quot;,&#xd;
				&quot;defining_code&quot;: {&#xd;
					&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
					&quot;terminology_id&quot;: {&#xd;
						&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
						&quot;value&quot;: &quot;openehr&quot;&#xd;
					},&#xd;
					&quot;code_string&quot;: &quot;193&quot;&#xd;
				}&#xd;
			}&#xd;
		}]&#xd;
	},&#xd;
	&quot;content&quot;: [{&#xd;
		&quot;_type&quot;: &quot;OBSERVATION&quot;,&#xd;
		&quot;name&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;Minimal&quot;&#xd;
		},&#xd;
		&quot;archetype_node_id&quot;: &quot;openEHR-EHR-OBSERVATION.minimal.v1&quot;,&#xd;
		&quot;language&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;en&quot;&#xd;
		},&#xd;
		&quot;encoding&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;Unicode&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
		},&#xd;
		&quot;subject&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
		},&#xd;
		&quot;data&quot;: {&#xd;
			&quot;_type&quot;: &quot;HISTORY&quot;,&#xd;
			&quot;name&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;Event Series&quot;&#xd;
			},&#xd;
			&quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
			&quot;origin&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
				&quot;value&quot;: &quot;2019-01-28T21:22:19,552+0000&quot;&#xd;
			},&#xd;
			&quot;events&quot;: [{&#xd;
				&quot;_type&quot;: &quot;POINT_EVENT&quot;,&#xd;
				&quot;name&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;Cualquier evento&quot;&#xd;
				},&#xd;
				&quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
				&quot;time&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
					&quot;value&quot;: &quot;2019-01-28T21:22:19,562+0000&quot;&#xd;
				},&#xd;
				&quot;data&quot;: {&#xd;
					&quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
					&quot;name&quot;: {&#xd;
						&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
						&quot;value&quot;: &quot;Arbol&quot;&#xd;
					},&#xd;
					&quot;archetype_node_id&quot;: &quot;at0003&quot;,&#xd;
					&quot;items&quot;: [{&#xd;
						&quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
						&quot;name&quot;: {&#xd;
							&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
							&quot;value&quot;: &quot;text&quot;&#xd;
						},&#xd;
						&quot;archetype_node_id&quot;: &quot;at0004&quot;,&#xd;
						&quot;value&quot;: {&#xd;
							&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
							&quot;value&quot;: &quot;first value&quot;&#xd;
						}&#xd;
					}]&#xd;
				}&#xd;
			}]&#xd;
		}&#xd;
	}]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/composition</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (compo minimal_instruction commit)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /composition (minimal_instruction)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
	&quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
	&quot;name&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;Minimal&quot;&#xd;
	},&#xd;
	&quot;archetype_details&quot;: {&#xd;
		&quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
		&quot;archetype_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
		},&#xd;
		&quot;template_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
			&quot;value&quot;: &quot;minimal_instruction.en.v1&quot;&#xd;
		},&#xd;
		&quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
	},&#xd;
	&quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
	&quot;language&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;en&quot;&#xd;
	},&#xd;
	&quot;territory&quot;: {&#xd;
		&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
		&quot;terminology_id&quot;: {&#xd;
			&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
			&quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
		},&#xd;
		&quot;code_string&quot;: &quot;UY&quot;&#xd;
	},&#xd;
	&quot;category&quot;: {&#xd;
		&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
		&quot;value&quot;: &quot;event&quot;,&#xd;
		&quot;defining_code&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;openehr&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;433&quot;&#xd;
		}&#xd;
	},&#xd;
	&quot;composer&quot;: {&#xd;
		&quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
		&quot;external_ref&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
			&quot;id&quot;: {&#xd;
				&quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
				&quot;value&quot;: &quot;638e55da-32db-42fa-8bb3-dafb685ad8a3&quot;&#xd;
			},&#xd;
			&quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
			&quot;type&quot;: &quot;PERSON&quot;&#xd;
		},&#xd;
		&quot;name&quot;: &quot;Dr. House&quot;&#xd;
	},&#xd;
	&quot;context&quot;: {&#xd;
		&quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
		&quot;start_time&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
			&quot;value&quot;: &quot;2019-01-28T21:22:19,542+0000&quot;&#xd;
		},&#xd;
		&quot;setting&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
			&quot;defining_code&quot;: {&#xd;
				&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
				&quot;terminology_id&quot;: {&#xd;
					&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
					&quot;value&quot;: &quot;openehr&quot;&#xd;
				},&#xd;
				&quot;code_string&quot;: &quot;229&quot;&#xd;
			}&#xd;
		},&#xd;
		&quot;participations&quot;: [{&#xd;
			&quot;_type&quot;: &quot;PARTICIPATION&quot;,&#xd;
			&quot;function&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;legal guardian consent author&quot;&#xd;
			},&#xd;
			&quot;performer&quot;: {&#xd;
				&quot;_type&quot;: &quot;PARTY_RELATED&quot;,&#xd;
				&quot;name&quot;: &quot;Charles Connor&quot;,&#xd;
				&quot;relationship&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;father&quot;,&#xd;
					&quot;defining_code&quot;: {&#xd;
						&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
						&quot;terminology_id&quot;: {&#xd;
							&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
							&quot;value&quot;: &quot;openehr&quot;&#xd;
						},&#xd;
						&quot;code_string&quot;: &quot;9&quot;&#xd;
					}&#xd;
				}&#xd;
			},&#xd;
			&quot;mode&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;not specified&quot;,&#xd;
				&quot;defining_code&quot;: {&#xd;
					&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
					&quot;terminology_id&quot;: {&#xd;
						&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
						&quot;value&quot;: &quot;openehr&quot;&#xd;
					},&#xd;
					&quot;code_string&quot;: &quot;193&quot;&#xd;
				}&#xd;
			}&#xd;
		}]&#xd;
	},&#xd;
	&quot;content&quot;: [{&#xd;
		&quot;_type&quot;: &quot;INSTRUCTION&quot;,&#xd;
		&quot;name&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;Minimal&quot;&#xd;
		},&#xd;
		&quot;archetype_node_id&quot;: &quot;openEHR-EHR-INSTRUCTION.minimal.v1&quot;,&#xd;
		&quot;language&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;en&quot;&#xd;
		},&#xd;
		&quot;encoding&quot;: {&#xd;
			&quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
			&quot;terminology_id&quot;: {&#xd;
				&quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
				&quot;value&quot;: &quot;Unicode&quot;&#xd;
			},&#xd;
			&quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
		},&#xd;
		&quot;subject&quot;: {&#xd;
			&quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
		},&#xd;
		&quot;narrative&quot;: {&#xd;
			&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
			&quot;value&quot;: &quot;SkSWiEQCpCFLrVKpnv.PPbgCjVpDCCcpa,F gwhjDRxPb, HViXmNuVSLjwzzzkDzFlbx.psKOqglDvA ZpkYv wYnobIoX,MuIlRcFJLmsBfNPkEKLNiXKbUiO,RPhnpZz.dFBM,ypJxriu.XPNyNZQcPYcgrFOkiTNWqJBUu.ETLpZyreAHaCoaz fXGwMrCKFoMdQABSHkHWwbSBzCLcSkMMdttHNqWfYCFILenzPiGzBLHDRxbJdpajNFeN&quot;&#xd;
		},&#xd;
		&quot;activities&quot;: [{&#xd;
			&quot;_type&quot;: &quot;ACTIVITY&quot;,&#xd;
			&quot;name&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
				&quot;value&quot;: &quot;Current Activity&quot;&#xd;
			},&#xd;
			&quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
			&quot;description&quot;: {&#xd;
				&quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
				&quot;name&quot;: {&#xd;
					&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
					&quot;value&quot;: &quot;Arbol&quot;&#xd;
				},&#xd;
				&quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
				&quot;items&quot;: [{&#xd;
					&quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
					&quot;name&quot;: {&#xd;
						&quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
						&quot;value&quot;: &quot;duration&quot;&#xd;
					},&#xd;
					&quot;archetype_node_id&quot;: &quot;at0003&quot;,&#xd;
					&quot;value&quot;: {&#xd;
						&quot;_type&quot;: &quot;DV_DURATION&quot;,&#xd;
						&quot;value&quot;: &quot;PT30M&quot;&#xd;
					}&#xd;
				}]&#xd;
			},&#xd;
			&quot;timing&quot;: {&#xd;
				&quot;_type&quot;: &quot;DV_PARSABLE&quot;,&#xd;
				&quot;value&quot;: &quot;P1D&quot;,&#xd;
				&quot;formalism&quot;: &quot;ISO8601&quot;&#xd;
			},&#xd;
			&quot;action_archetype_id&quot;: &quot;openEHR-EHR-ACTION\\.minimal\\.v1&quot;&#xd;
		}]&#xd;
	}]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/composition</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (compo minimal_action commit)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /composition (minimal_action)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
  &quot;name&quot;: {&#xd;
    &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
    &quot;value&quot;: &quot;Minimal&quot;&#xd;
  },&#xd;
  &quot;uid&quot;: {&#xd;
    &quot;_type&quot;: &quot;OBJECT_VERSION_ID&quot;,&#xd;
    &quot;value&quot;: &quot;f996069b-f5ab-4fcc-81bd-7b7aa7a08ac5::piri.ehrscape.com::1&quot;&#xd;
  },&#xd;
  &quot;archetype_details&quot;: {&#xd;
    &quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
    &quot;archetype_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
      &quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
    },&#xd;
    &quot;template_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
      &quot;value&quot;: &quot;Minimal action 2&quot;&#xd;
    },&#xd;
    &quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
  },&#xd;
  &quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
  &quot;language&quot;: {&#xd;
    &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
    &quot;terminology_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      &quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
    },&#xd;
    &quot;code_string&quot;: &quot;es&quot;&#xd;
  },&#xd;
  &quot;territory&quot;: {&#xd;
    &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
    &quot;terminology_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      &quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
    },&#xd;
    &quot;code_string&quot;: &quot;UY&quot;&#xd;
  },&#xd;
  &quot;category&quot;: {&#xd;
    &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
    &quot;value&quot;: &quot;evento&quot;,&#xd;
    &quot;defining_code&quot;: {&#xd;
      &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      &quot;terminology_id&quot;: {&#xd;
        &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
        &quot;value&quot;: &quot;openehr&quot;&#xd;
      },&#xd;
      &quot;code_string&quot;: &quot;433&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;composer&quot;: {&#xd;
    &quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
    &quot;external_ref&quot;: {&#xd;
      &quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
      &quot;id&quot;: {&#xd;
        &quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
        &quot;value&quot;: &quot;49d3a039-e462-45df-bd2a-4109992a033c&quot;&#xd;
      },&#xd;
      &quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
      &quot;type&quot;: &quot;PERSON&quot;&#xd;
    },&#xd;
    &quot;name&quot;: &quot;Dr. House&quot;&#xd;
  },&#xd;
  &quot;context&quot;: {&#xd;
    &quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
    &quot;start_time&quot;: {&#xd;
      &quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
      &quot;value&quot;: &quot;2019-11-20T20:35:26.466Z&quot;&#xd;
    },&#xd;
    &quot;setting&quot;: {&#xd;
      &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
      &quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
      &quot;defining_code&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;openehr&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;229&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;content&quot;: [&#xd;
    {&#xd;
      &quot;_type&quot;: &quot;ACTION&quot;,&#xd;
      &quot;name&quot;: {&#xd;
        &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
        &quot;value&quot;: &quot;Minimal 2&quot;&#xd;
      },&#xd;
      &quot;archetype_node_id&quot;: &quot;openEHR-EHR-ACTION.minimal_2.v1&quot;,&#xd;
      &quot;language&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;es&quot;&#xd;
      },&#xd;
      &quot;encoding&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;Unicode&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
      },&#xd;
      &quot;subject&quot;: {&#xd;
        &quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
      },&#xd;
      &quot;time&quot;: {&#xd;
        &quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
        &quot;value&quot;: &quot;2019-11-20T20:35:26.466Z&quot;&#xd;
      },&#xd;
      &quot;description&quot;: {&#xd;
        &quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
        &quot;name&quot;: {&#xd;
          &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
          &quot;value&quot;: &quot;Arbol&quot;&#xd;
        },&#xd;
        &quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
        &quot;items&quot;: [&#xd;
          {&#xd;
            &quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
            &quot;name&quot;: {&#xd;
              &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
              &quot;value&quot;: &quot;Proportion&quot;&#xd;
            },&#xd;
            &quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
            &quot;value&quot;: {&#xd;
              &quot;_type&quot;: &quot;DV_PROPORTION&quot;,&#xd;
              &quot;numerator&quot;: 3,&#xd;
              &quot;denominator&quot;: 1.0,&#xd;
              &quot;type&quot;: 3,&#xd;
              &quot;precision&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;ism_transition&quot;: {&#xd;
        &quot;_type&quot;: &quot;ISM_TRANSITION&quot;,&#xd;
        &quot;current_state&quot;: {&#xd;
          &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
          &quot;value&quot;: &quot;planned&quot;,&#xd;
          &quot;defining_code&quot;: {&#xd;
            &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
            &quot;terminology_id&quot;: {&#xd;
              &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
              &quot;value&quot;: &quot;openehr&quot;&#xd;
            },&#xd;
            &quot;code_string&quot;: &quot;526&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/composition</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (compo minimal_admin commit)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">5</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /composition (minimal_admin)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;_type&quot;: &quot;COMPOSITION&quot;,&#xd;
  &quot;name&quot;: {&#xd;
    &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
    &quot;value&quot;: &quot;Minimal&quot;&#xd;
  },&#xd;
  &quot;uid&quot;: {&#xd;
    &quot;_type&quot;: &quot;OBJECT_VERSION_ID&quot;,&#xd;
    &quot;value&quot;: &quot;f996069b-f5ab-4fcc-81bd-7b7aa7a08ac5::piri.ehrscape.com::1&quot;&#xd;
  },&#xd;
  &quot;archetype_details&quot;: {&#xd;
    &quot;_type&quot;: &quot;ARCHETYPED&quot;,&#xd;
    &quot;archetype_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;ARCHETYPE_ID&quot;,&#xd;
      &quot;value&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;&#xd;
    },&#xd;
    &quot;template_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TEMPLATE_ID&quot;,&#xd;
      &quot;value&quot;: &quot;Minimal action 2&quot;&#xd;
    },&#xd;
    &quot;rm_version&quot;: &quot;1.0.2&quot;&#xd;
  },&#xd;
  &quot;archetype_node_id&quot;: &quot;openEHR-EHR-COMPOSITION.minimal.v1&quot;,&#xd;
  &quot;language&quot;: {&#xd;
    &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
    &quot;terminology_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      &quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
    },&#xd;
    &quot;code_string&quot;: &quot;es&quot;&#xd;
  },&#xd;
  &quot;territory&quot;: {&#xd;
    &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
    &quot;terminology_id&quot;: {&#xd;
      &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
      &quot;value&quot;: &quot;ISO_3166-1&quot;&#xd;
    },&#xd;
    &quot;code_string&quot;: &quot;UY&quot;&#xd;
  },&#xd;
  &quot;category&quot;: {&#xd;
    &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
    &quot;value&quot;: &quot;evento&quot;,&#xd;
    &quot;defining_code&quot;: {&#xd;
      &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
      &quot;terminology_id&quot;: {&#xd;
        &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
        &quot;value&quot;: &quot;openehr&quot;&#xd;
      },&#xd;
      &quot;code_string&quot;: &quot;433&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;composer&quot;: {&#xd;
    &quot;_type&quot;: &quot;PARTY_IDENTIFIED&quot;,&#xd;
    &quot;external_ref&quot;: {&#xd;
      &quot;_type&quot;: &quot;PARTY_REF&quot;,&#xd;
      &quot;id&quot;: {&#xd;
        &quot;_type&quot;: &quot;HIER_OBJECT_ID&quot;,&#xd;
        &quot;value&quot;: &quot;49d3a039-e462-45df-bd2a-4109992a033c&quot;&#xd;
      },&#xd;
      &quot;namespace&quot;: &quot;DEMOGRAPHIC&quot;,&#xd;
      &quot;type&quot;: &quot;PERSON&quot;&#xd;
    },&#xd;
    &quot;name&quot;: &quot;Dr. House&quot;&#xd;
  },&#xd;
  &quot;context&quot;: {&#xd;
    &quot;_type&quot;: &quot;EVENT_CONTEXT&quot;,&#xd;
    &quot;start_time&quot;: {&#xd;
      &quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
      &quot;value&quot;: &quot;2019-11-20T20:35:26.466Z&quot;&#xd;
    },&#xd;
    &quot;setting&quot;: {&#xd;
      &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
      &quot;value&quot;: &quot;primary nursing care&quot;,&#xd;
      &quot;defining_code&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;openehr&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;229&quot;&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;content&quot;: [&#xd;
    {&#xd;
      &quot;_type&quot;: &quot;ACTION&quot;,&#xd;
      &quot;name&quot;: {&#xd;
        &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
        &quot;value&quot;: &quot;Minimal 2&quot;&#xd;
      },&#xd;
      &quot;archetype_node_id&quot;: &quot;openEHR-EHR-ACTION.minimal_2.v1&quot;,&#xd;
      &quot;language&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;ISO_639-1&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;es&quot;&#xd;
      },&#xd;
      &quot;encoding&quot;: {&#xd;
        &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
        &quot;terminology_id&quot;: {&#xd;
          &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
          &quot;value&quot;: &quot;Unicode&quot;&#xd;
        },&#xd;
        &quot;code_string&quot;: &quot;UTF-8&quot;&#xd;
      },&#xd;
      &quot;subject&quot;: {&#xd;
        &quot;_type&quot;: &quot;PARTY_SELF&quot;&#xd;
      },&#xd;
      &quot;time&quot;: {&#xd;
        &quot;_type&quot;: &quot;DV_DATE_TIME&quot;,&#xd;
        &quot;value&quot;: &quot;2019-11-20T20:35:26.466Z&quot;&#xd;
      },&#xd;
      &quot;description&quot;: {&#xd;
        &quot;_type&quot;: &quot;ITEM_TREE&quot;,&#xd;
        &quot;name&quot;: {&#xd;
          &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
          &quot;value&quot;: &quot;Arbol&quot;&#xd;
        },&#xd;
        &quot;archetype_node_id&quot;: &quot;at0001&quot;,&#xd;
        &quot;items&quot;: [&#xd;
          {&#xd;
            &quot;_type&quot;: &quot;ELEMENT&quot;,&#xd;
            &quot;name&quot;: {&#xd;
              &quot;_type&quot;: &quot;DV_TEXT&quot;,&#xd;
              &quot;value&quot;: &quot;Proportion&quot;&#xd;
            },&#xd;
            &quot;archetype_node_id&quot;: &quot;at0002&quot;,&#xd;
            &quot;value&quot;: {&#xd;
              &quot;_type&quot;: &quot;DV_PROPORTION&quot;,&#xd;
              &quot;numerator&quot;: 3,&#xd;
              &quot;denominator&quot;: 1.0,&#xd;
              &quot;type&quot;: 3,&#xd;
              &quot;precision&quot;: 1&#xd;
            }&#xd;
          }&#xd;
        ]&#xd;
      },&#xd;
      &quot;ism_transition&quot;: {&#xd;
        &quot;_type&quot;: &quot;ISM_TRANSITION&quot;,&#xd;
        &quot;current_state&quot;: {&#xd;
          &quot;_type&quot;: &quot;DV_CODED_TEXT&quot;,&#xd;
          &quot;value&quot;: &quot;planned&quot;,&#xd;
          &quot;defining_code&quot;: {&#xd;
            &quot;_type&quot;: &quot;CODE_PHRASE&quot;,&#xd;
            &quot;terminology_id&quot;: {&#xd;
              &quot;_type&quot;: &quot;TERMINOLOGY_ID&quot;,&#xd;
              &quot;value&quot;: &quot;openehr&quot;&#xd;
            },&#xd;
            &quot;code_string&quot;: &quot;526&quot;&#xd;
          }&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  ]&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/ehr/${ehr_id}/composition</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group (queries)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 1)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get ehr_id for all EHRs)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT e/ehr_id/value FROM EHR e&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 2)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get ehr_id that contains a COMPOSITION)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT e/ehr_id/value FROM EHR e CONTAINS COMPOSITION c&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 3)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get ehr_id that contains a COMPOSITION with arch_id contains OBS)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT e/ehr_id/value as uid FROM EHR e CONTAINS COMPOSITION c [openEHR-EHR-COMPOSITION.minimal.v1] CONTAINS OBSERVATION&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 4)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get all COMPOSITIONs)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT c FROM COMPOSITION c&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 5)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get all COMPOSITIONs with arch_id)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT c FROM COMPOSITION c [openEHR-EHR-COMPOSITION.minimal.v1]&quot;&#xd;
}&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller (query 6)" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1000</stringProp>
        </LoopController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request (get COMPOSITIONs contains OBS)" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;q&quot;: &quot;SELECT c FROM EHR e CONTAINS COMPOSITION c CONTAINS OBSERVATION&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ehrbase/rest/openehr/v1/query/aql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
